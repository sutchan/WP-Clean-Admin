(function($) {
    'use strict';

    window.WPCA = window.WPCA || {};
    WPCA.loginManager = {
        admin: {
            init: function() {
                if (!this.shouldRun()) return;
                
                this.setupMediaUpload();
                this.setupStylePreview();
                this.bindEvents();
                
                if (this.config.debug) {
                    if (typeof WPCA !== 'undefined' && typeof WPCA.core !== 'undefined' && typeof WPCA.core.logDebug === 'function') {
                        WPCA.core.logDebug('Admin模块初始化完成');
                    } else {
                        console.log('Admin模块初始化完成');
                    }
                }
            },
            
            config: {
                debug: window.wpca_admin?.debug || false
            },
            
            shouldRun: function() {
                return $('body.wp-admin').length > 0;
            },
            
            setupMediaUpload: function() {
                $('.wpca-upload-button').on('click', function(e) {
                    e.preventDefault();
                    const button = $(this);
                    const targetId = button.data('target');
                    const field = $('#' + targetId);
                    const preview = $('#' + targetId + '-preview');

                    if (typeof wp === 'undefined' || !wp.media) {
                        if (typeof WPCA !== 'undefined' && typeof WPCA.core !== 'undefined' && typeof WPCA.core.displayErrorNotice === 'function') {
                            WPCA.core.displayErrorNotice('WordPress媒体上传器不可用');
                        } else {
                            alert('WordPress媒体上传器不可用');
                        }
                        return;
                    }

                    const frame = wp.media({
                        title: window.wpca?.media_title || '选择或上传媒体',
                        button: { text: window.wpca?.media_button || '使用此媒体' },
                        multiple: false
                    });

                    frame.on('select', function() {
                        const attachment = frame.state().get('selection').first().toJSON();
                        field.val(attachment.url);
                        preview.find('img').attr('src', attachment.url);
                        preview.show();
                        
                        if ($('input[name="wpca_settings[login_style]"]:checked').val() === 'custom') {
                            WPCA.login.admin.updateLoginPreview('custom');
                        }
                    });

                    frame.open();
                });
            },
            
            updateLoginPreview: function(style) {
                const $ = jQuery;
                const preview = $('.wpca-login-preview-content');
                
                preview.removeClass((index, className) => {
                    return (className.match(/(^|\s)\S*preview/g) || []).join(' ');
                });
                
                preview.addClass(style + '-preview');

                switch(style) {
                    case 'default':
                        preview.find('.wpca-login-preview-logo').css('background-image', 'url(data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 84 84"><path fill="%232271b1" d="M42,0C18.8,0,0,18.8,0,42s18.8,42,42,42s42-18.8,42-42S65.2,0,42,0z M42,64c-12.2,0-22-9.8-22-22s9.8-22,22-22 s22,9.8,22,22S54.2,64,42,64z"/></svg>)');
                        preview.css('background-color', '#f1f1f1');
                        break;
                    case 'modern':
                        preview.find('.wpca-login-preview-logo').css('background-image', 'url(data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 84 84"><path fill="%234A90E2" d="M42,0C18.8,0,0,18.8,0,42s18.8,42,42,42s42-18.8,42-42S65.2,0,42,0z M42,64c-12.2,0-22-9.8-22-22s9.8-22,22-22 s22,9.8,22,22S54.2,64,42,64z"/></svg>)');
                        preview.css('background-color', '#f8f9fa');
                        break;
                    case 'minimal':
                        preview.find('.wpca-login-preview-logo').css('background-image', '');
                        preview.css('background-color', '#fff');
                        break;
                    case 'dark':
                        preview.find('.wpca-login-preview-logo').css('background-image', 'url(data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 84 84"><path fill="%23fff" d="M42,0C18.8,0,0,18.8,0,42s18.8,42,42,42s42-18.8,42-42S65.2,0,42,0z M42,64c-12.2,0-22-9.8-22-22s9.8-22,22-22 s22,9.8,22,22S54.2,64,42,64z"/></svg>)');
                        preview.css('background-color', '#222');
                        break;
                    case 'gradient':
                        preview.find('.wpca-login-preview-logo').css('background-image', 'url(data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 84 84"><path fill="%23fff" d="M42,0C18.8,0,0,18.8,0,42s18.8,42,42,42s42-18.8,42-42S65.2,0,42,0z M42,64c-12.2,0-22-9.8-22-22s9.8-22,22-22 s22,9.8,22,22S54.2,64,42,64z"/></svg>)');
                        preview.css('background', 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)');
                        break;
                    case 'custom':
                        const logoUrl = $('input[name="wpca_settings[login_logo]"]').val();
                        const bgUrl = $('input[name="wpca_settings[login_background]"]').val();
                        
                        if (logoUrl) {
                            preview.find('.wpca-login-preview-logo').css('background-image', `url(${logoUrl})`);
                        } else {
                            preview.find('.wpca-login-preview-logo').css('background-image', 'url(data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 84 84"><path fill="%232271b1" d="M42,0C18.8,0,0,18.8,0,42s18.8,42,42,42s42-18.8,42-42S65.2,0,42,0z M42,64c-12.2,0-22-9.8-22-22s9.8-22,22-22 s22,9.8,22,22S54.2,64,42,64z"/></svg>)');
                        }
                        
                        if (bgUrl) {
                            preview.css('background-image', `url(${bgUrl})`);
                            preview.css('background-color', '');
                        } else {
                            preview.css('background-image', '');
                            preview.css('background-color', '#f1f1f1');
                        }
                        break;
                }
            },
            
            setupStylePreview: function() {
                const currentStyle = $('input[name="wpca_settings[login_style]"]:checked').val() || 'default';
                this.updateLoginPreview(currentStyle);
            },
            
            bindEvents: function() {
                const self = this;
                $('input[name="wpca_settings[login_style]"]').on('change', function() {
                    self.updateLoginPreview($(this).val());
                });
                
                $('.wpca-remove-button').on('click', function(e) {
                    e.preventDefault();
                    const targetId = $(this).data('target');
                    $('#' + targetId).val('');
                    $('#' + targetId + '-preview').hide().find('img').attr('src', '');
                    
                    if ($('input[name="wpca_settings[login_style]"]:checked').val() === 'custom') {
                        self.updateLoginPreview('custom');
                    }
                });
            }
        },
        
        frontend: {
            init: function() {
                if (!this.shouldRun()) return;
                
                this.applyLoginStyle();
                this.toggleElements();
                
                if (this.config.debug) {
                    if (typeof WPCA !== 'undefined' && typeof WPCA.core !== 'undefined' && typeof WPCA.core.logDebug === 'function') {
                        WPCA.core.logDebug('Frontend模块初始化完成');
                    } else {
                        console.log('Frontend模块初始化完成');
                    }
                }
            },
            
            config: {
                debug: window.wpcaLoginVars?.debug || false
            },
            
            shouldRun: function() {
                return $('body.login').length > 0;
            },
            
            applyLoginStyle: function() {
                const vars = window.wpcaLoginVars || {};
                const $body = $('body.login');
                
                $body.removeClass((index, className) => {
                    return (className.match(/(^|\s)wpca-login-\S+/g) || []).join(' ');
                });
                
                if (vars.loginStyle) {
                    $body.addClass('wpca-login-' + vars.loginStyle);
                    
                    if (vars.loginStyle === 'custom') {
                        if (vars.loginLogo) {
                            $('#login h1 a').css('background-image', 'url(' + vars.loginLogo + ')');
                        }
                        if (vars.loginBackground) {
                            $body.css('background-image', 'url(' + vars.loginBackground + ')');
                        }
                    }
                }
            },
            
            toggleElements: function() {
                const controls = window.wpcaLoginVars?.elementControls || {};
                
                if (controls.show_language_switcher === '0') $('.language-switcher').hide();
                if (controls.show_back_to_site === '0') $('#backtoblog').hide();
                if (controls.show_remember_me === '0') $('.forgetmenot').hide();
                if (controls.show_register_link === '0') $('#nav').hide();
            }
        }
    };

    $(function() {
        try {
            WPCA.login.admin.init();
            WPCA.login.frontend.init();
        } catch (error) {
            console.error('WPCA Login Manager 初始化错误:', error);
            if (typeof WPCA !== 'undefined' && typeof WPCA.core !== 'undefined' && typeof WPCA.core.displayErrorNotice === 'function') {
                WPCA.core.displayErrorNotice('登录管理模块初始化失败: ' + error.message);
            }
        }
    });

})(jQuery);